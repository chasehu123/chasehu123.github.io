<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo_NexT 博客深度定制指津</title>
    <url>/2021/06/Hexo-NexT-%E5%8D%9A%E5%AE%A2%E6%B7%B1%E5%BA%A6%E5%AE%9A%E5%88%B6%E6%8C%87%E6%B4%A5/</url>
    <content><![CDATA[<h3 id="主要参考文章"><a href="#主要参考文章" class="headerlink" title="主要参考文章"></a>主要参考文章</h3><p><a target="_blank" rel="noopener" href="https://cloud.tencent.com/developer/article/1520557">这可能是迄今为止最全的hexo博客搭建教程</a></p>
<p><a target="_blank" rel="noopener" href="https://blog.csdn.net/as480133937/article/details/100138838">Hexo-Next 主题博客个性化配置超详细，超全面(两万字)</a></p>
<p><a target="_blank" rel="noopener" href="https://hexo.io/zh-cn/docs/configuration.html">Hexo官方文档</a></p>
<p><a target="_blank" rel="noopener" href="http://theme-next.iissnan.com/theme-settings.html#tags-page">NexT官方文档</a></p>
<h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><blockquote>
<ol>
<li>已安装 Git Node.js (推荐使用 Node.js 版本管理软件 nvm)</li>
<li>如果是中国大陆用户, 请把 npm 镜像源切换成淘宝镜像源或其他</li>
<li>熟悉基本操作(包括但不限于 Git / GitHub)</li>
</ol>
</blockquote>
<h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><h5 id="重点操作"><a href="#重点操作" class="headerlink" title="重点操作"></a>重点操作</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo npm install -g hexo-cli # Win10 用户去掉 sudo 用管理员权限</span><br><span class="line">npm install</span><br><span class="line">hexo s -p 8888</span><br><span class="line">hexo g</span><br><span class="line">npm install hexo-deployer-git --save # 安装部署工具</span><br><span class="line">hexo d</span><br><span class="line">hexo clean</span><br><span class="line">npm install hexo --save # 初始化请使用这个</span><br><span class="line">hexo new page &quot;&lt;pageName&gt;&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 记得修改 _config.yml 文件以添加你的博客仓库信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置一下 git config --global</span></span><br></pre></td></tr></table></figure>

<h5 id="生成-tags-categories-页面"><a href="#生成-tags-categories-页面" class="headerlink" title="生成 tags / categories 页面"></a>生成 tags / categories 页面</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在博客文件的根目录下操作</span></span><br><span class="line">hexo new page &quot;tags&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">修改 sources/tags/index.html:</span></span><br><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2021-06-04 11:33:29</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成 categories 方法一样</span></span><br></pre></td></tr></table></figure>

<h5 id="添加-README-md-文档"><a href="#添加-README-md-文档" class="headerlink" title="添加 README.md 文档"></a>添加 README.md 文档</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在博客文件的根目录下</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改 _config.yml 搜索 skip_render写入:</span></span><br><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure>

<h5 id="添加-License"><a href="#添加-License" class="headerlink" title="添加 License"></a>添加 License</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在主题配置文件中搜索 creative_commons 修改为:</span></span><br><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: true</span><br><span class="line">  post: true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>

<h5 id="添加-GitHub-丝带"><a href="#添加-GitHub-丝带" class="headerlink" title="添加 GitHub 丝带"></a>添加 GitHub 丝带</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim themes/next/layout/_layout.swig 搜索 headband 写入:</span></span><br><span class="line">&lt;a href=&quot;https://github.com/chasehu123&quot; class=&quot;github-corner&quot; aria-label=&quot;View source on GitHub&quot;&gt;&lt;svg width=&quot;80&quot; height=&quot;80&quot; viewBox=&quot;0 0 250 250&quot; style=&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill=&quot;currentColor&quot; style=&quot;transform-origin: 130px 106px;&quot; class=&quot;octo-arm&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill=&quot;currentColor&quot; class=&quot;octo-body&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h5 id="博客配色优化"><a href="#博客配色优化" class="headerlink" title="博客配色优化"></a>博客配色优化</h5><blockquote>
<p>参考文章: <a target="_blank" rel="noopener" href="https://ryzn.me/p/beauty-my-blog.html">Hexo+Next博客美化</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在主题配置文件中做修改</span></span><br><span class="line">custom_file_path:</span><br><span class="line">style: source/_data/fetch1.styl</span><br><span class="line"><span class="meta">#</span><span class="bash"> 写入:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## source/_data/next.yml</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 一些关键配置</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新增styl文件，最终会编译成css代码</span></span><br><span class="line">custom_file_path:</span><br><span class="line">style: source/_data/styles.styl</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 版权相关</span></span><br><span class="line">creative_commons:</span><br><span class="line">license: by-nc-sa</span><br><span class="line">sidebar: true</span><br><span class="line">post: true</span><br><span class="line">language: zh-CN</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> next的子主题</span></span><br><span class="line">scheme: Gemini</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 不要“阅读更多”的按钮</span></span><br><span class="line">read_more_btn: false</span><br><span class="line">body</span><br><span class="line">background: #e5e6d0 url(/images/bg.jpg) repeat 0 0</span><br><span class="line">font-size: 0.96em</span><br><span class="line">line-height: 1.78</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.site-brand-container</span><br><span class="line">background: #172A3A</span><br><span class="line"></span><br><span class="line">.site-nav</span><br><span class="line">font-size: 110%</span><br><span class="line"></span><br><span class="line">.sidebar</span><br><span class="line">font-size: 105%</span><br><span class="line"></span><br><span class="line">.header-inner</span><br><span class="line">border-radius: 0 0 8px 8px</span><br><span class="line"></span><br><span class="line">.sidebar-inner</span><br><span class="line">border-radius: 8px</span><br><span class="line"></span><br><span class="line">.post-block + .post-block</span><br><span class="line">border-radius: 8px</span><br><span class="line"></span><br><span class="line">.post-block</span><br><span class="line">border-radius: 0 0 8px 8px</span><br><span class="line"></span><br><span class="line">h1.post-title</span><br><span class="line">background: coral</span><br><span class="line">background-image: -webkit-linear-gradient(top, coral, coral)</span><br><span class="line">-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.25), inset 0 -1px 0 rgba(0, 0, 0, 0.1)</span><br><span class="line">box-shadow: 0px 1px 3px rgba(0, 0, 0, .05), 0 -1px 0 rgba(255,255,255, .6) inset</span><br><span class="line">/* position: fixed */</span><br><span class="line">width: 100%</span><br><span class="line">z-index: 1000</span><br><span class="line">border-radius: 16px</span><br><span class="line">/* height: 50px */</span><br><span class="line">/* cursor: pointer */</span><br><span class="line">/* margin-top: 10px */</span><br><span class="line">padding: 8px 0</span><br><span class="line"></span><br><span class="line">.posts-expand .post-meta</span><br><span class="line">margin-bottom: 30px</span><br><span class="line"></span><br><span class="line">.post-button</span><br><span class="line">margin-top: 0</span><br><span class="line"></span><br><span class="line">:root</span><br><span class="line">--content-bg-color: #fafaf3</span><br><span class="line">--link-color: #A34D32</span><br><span class="line">--link-hover-color: cadetblue</span><br><span class="line">--btn-default-bg: #fafaf3</span><br><span class="line">--btn-default-color: #A34D32</span><br><span class="line">--btn-default-hover-bg: #CFCF8C</span><br><span class="line">--btn-default-hover-color: #508991</span><br><span class="line"></span><br><span class="line">.btn</span><br><span class="line">border: 0</span><br><span class="line"></span><br><span class="line">// 近期文章</span><br><span class="line">.links-of-recent-posts</span><br><span class="line">font-size: 0.8125em</span><br><span class="line">margin-top: 10px</span><br><span class="line"></span><br><span class="line">.links-of-recent-posts-title</span><br><span class="line">font-size: 1.03em</span><br><span class="line">font-weight: 600</span><br><span class="line">margin-top: 0</span><br><span class="line"></span><br><span class="line">.links-of-recent-posts-list</span><br><span class="line">list-style: none</span><br><span class="line">margin: 0</span><br><span class="line">padding: 0</span><br></pre></td></tr></table></figure>


</blockquote>
<h3 id="我的版本信息"><a href="#我的版本信息" class="headerlink" title="我的版本信息"></a>我的版本信息</h3><h3 id="插件安装-for-Hexo-NexT"><a href="#插件安装-for-Hexo-NexT" class="headerlink" title="插件安装 for Hexo-NexT"></a>插件安装 for Hexo-NexT</h3><ul>
<li><p>hexo-symbols-count-time</p>
<blockquote>
<p>作用: 统计字数与显示阅读所需时间</p>
<p>参考文章: <a target="_blank" rel="noopener" href="https://co5.me/2018/180613-wordcount.html">Hexo NexT v6.3.0 字数统计</a></p>
<p>使用方法:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请在 Hexo 博客文件的根目录下操作</span></span><br><span class="line">npm i hexo-symbols-count-time --save</span><br><span class="line"><span class="comment"># 在 _config.yml 末尾添加:</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">	symbols: <span class="literal">true</span></span><br><span class="line">	time: <span class="literal">true</span></span><br><span class="line">	total_symbols: <span class="literal">true</span></span><br><span class="line">	total_time: <span class="literal">true</span></span><br><span class="line"><span class="comment"># 在 themes/next/_congit.yml 搜索 wordcount 改为:</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">	separated_meta: <span class="literal">true</span></span><br><span class="line">	item_text_post: <span class="literal">true</span></span><br><span class="line">	item_text_total: <span class="literal">false</span></span><br><span class="line">	awl: 2</span><br><span class="line">	wpm: 300</span><br></pre></td></tr></table></figure></blockquote>
</li>
<li><p>hexo-helper-live2d</p>
<blockquote>
<p>作用: 网页宠物</p>
<p>参考文章: <a target="_blank" rel="noopener" href="https://zhuanlan.zhihu.com/p/149536828">Hexo添加helper-live2d模型插件</a></p>
<p>使用方法:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 请在 Hexo 博客文件的根目录下操作</span></span><br><span class="line">npm i hexo-helper-live2d --save</span><br><span class="line">npm install live2d-widget-model-hijiki # 也可以下载其他模型</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在 _confiy.yml 末尾添加:</span></span><br><span class="line">live2d:</span><br><span class="line">enable: true</span><br><span class="line">scriptFrom: local</span><br><span class="line">pluginRootPath: live2dw/</span><br><span class="line">pluginJsPath: lib/</span><br><span class="line">pluginModelPath: assets/</span><br><span class="line">tagMode: false</span><br><span class="line">debug: false</span><br><span class="line">model:</span><br><span class="line">use: live2d-widget-model-koharu</span><br><span class="line">display:</span><br><span class="line">position: right</span><br><span class="line">width: 150</span><br><span class="line">height: 300</span><br><span class="line">mobile:</span><br><span class="line">show: false # 设置为 false 时, 手机端不可见</span><br></pre></td></tr></table></figure></blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>博客优化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>代码渲染效果测试</title>
    <url>/2021/06/%E4%BB%A3%E7%A0%81%E6%B8%B2%E6%9F%93%E6%95%88%E6%9E%9C%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">binarySearch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bs</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> high = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = low + (high - low) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (target &gt; nums[mid]) &#123;</span><br><span class="line">                low = mid + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target &lt; nums[mid]) &#123;</span><br><span class="line">                high = mid -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] nums = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> target = <span class="number">3</span>;</span><br><span class="line">        System.out.println(bs(nums, target));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> <span class="built_in">array</span>[], <span class="keyword">int</span> target, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 二分查找函数. 如果有重复值, 就返回最小索引 </span></span><br><span class="line">	<span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> high = length - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(low &lt;= high)&#123;</span><br><span class="line">		<span class="keyword">int</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">array</span>[mid] &lt; target) &#123;</span><br><span class="line">			low = mid + <span class="number">1</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">array</span>[mid] &gt; target)&#123;</span><br><span class="line">			high = mid - <span class="number">1</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (mid == <span class="number">0</span> || <span class="built_in">array</span>[mid - <span class="number">1</span>] != target) &#123;</span><br><span class="line">				<span class="keyword">return</span> mid;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				high = mid - <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">// 主函数. 测试用 </span></span><br><span class="line">	<span class="keyword">int</span> <span class="built_in">array</span>[] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>&#125;;</span><br><span class="line">	<span class="keyword">int</span> target = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">int</span> length = <span class="keyword">sizeof</span>(<span class="built_in">array</span>) / <span class="number">4</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Index: %d&quot;</span>, binarySearch(<span class="built_in">array</span>, target, length));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findFirst</span><span class="params">(array []<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	left, right := <span class="number">0</span>, <span class="built_in">len</span>(array) - <span class="number">1</span></span><br><span class="line">	<span class="keyword">for</span> left&lt;=right &#123;</span><br><span class="line">		mid := left + (right - left)&gt;&gt;<span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> array[mid] &gt; target &#123;</span><br><span class="line">			right = mid - <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> array[mid] &lt; target &#123;</span><br><span class="line">			left = mid + <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> mid == <span class="number">0</span> || array[mid - <span class="number">1</span>] != target &#123;</span><br><span class="line">				<span class="keyword">return</span> mid</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				right = mid - <span class="number">1</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findLast</span><span class="params">(array []<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	left, right := <span class="number">0</span>, <span class="built_in">len</span>(array) - <span class="number">1</span></span><br><span class="line">	<span class="keyword">for</span> left&lt;=right &#123;</span><br><span class="line">		mid := left + (right - left)&gt;&gt;<span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> array[mid] &gt; target &#123;</span><br><span class="line">			right = mid - <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> array[mid] &lt; target &#123;</span><br><span class="line">			left = mid + <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> mid == <span class="built_in">len</span>(array) - <span class="number">1</span> || array[mid + <span class="number">1</span>] != target &#123;</span><br><span class="line">				<span class="keyword">return</span> mid</span><br><span class="line">			&#125;</span><br><span class="line">			left = mid + <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findFirstBiggerOrEqual</span><span class="params">(array []<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	left, right := <span class="number">0</span>, <span class="built_in">len</span>(array) - <span class="number">1</span></span><br><span class="line">	<span class="keyword">for</span> left&lt;=right &#123;</span><br><span class="line">		mid := left + (right - left)&gt;&gt;<span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> array[mid] &gt;= target &#123;</span><br><span class="line">			<span class="keyword">if</span> mid == <span class="number">0</span> || array[mid <span class="number">-1</span>] &lt; target &#123;</span><br><span class="line">				<span class="keyword">return</span> mid</span><br><span class="line">			&#125;</span><br><span class="line">			right = mid - <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			left = mid + <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findLastSmallerOrEqual</span><span class="params">(array []<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">	left, right := <span class="number">0</span>, <span class="built_in">len</span>(array) - <span class="number">1</span></span><br><span class="line">	<span class="keyword">for</span> left &lt;= right &#123;</span><br><span class="line">		mid := left + (right - left)&gt;&gt;<span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> array[mid] &lt;= target &#123;</span><br><span class="line">			<span class="keyword">if</span> mid == <span class="built_in">len</span>(array) - <span class="number">1</span> || array[mid + <span class="number">1</span>] &gt; target &#123;</span><br><span class="line">				<span class="keyword">return</span> mid</span><br><span class="line">			&#125;</span><br><span class="line">			left = mid + <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			right = mid - <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> array = []<span class="keyword">int</span>&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>&#125;</span><br><span class="line">	target := <span class="number">7</span></span><br><span class="line">	fmt.Println(findFirst(array, target))</span><br><span class="line">	fmt.Println(findLast(array, target))</span><br><span class="line">	fmt.Println(findFirstBiggerOrEqual(array, target))</span><br><span class="line">	fmt.Println(findLastSmallerOrEqual(array, target))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binarySearch</span>(<span class="params">array, target</span>):</span></span><br><span class="line">    left, right = <span class="number">0</span>, <span class="built_in">len</span>(array) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> left &lt;= right:</span><br><span class="line">        mid = (left + right) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> array[mid] &gt; target:</span><br><span class="line">            right = mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> array[mid] &lt; target:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> mid == <span class="number">0</span> <span class="keyword">or</span> array[mid - <span class="number">1</span>] != target:</span><br><span class="line">                <span class="built_in">print</span>(mid)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                right = mid - <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;none&quot;</span>)</span><br><span class="line"></span><br><span class="line">array = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">target = -<span class="number">22</span></span><br><span class="line">binarySearch(array, target)</span><br></pre></td></tr></table></figure>

<h3 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h3><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binarySearch</span>(<span class="params">arr: <span class="built_in">number</span>[], target: <span class="built_in">number</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> left: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> right: <span class="built_in">number</span> = arr.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        <span class="keyword">let</span> mid: <span class="built_in">number</span> = <span class="built_in">Math</span>.ceil((left + right) / <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> (arr[mid] &gt; target) &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &lt; target) &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (mid == <span class="number">0</span> || arr[mid - <span class="number">1</span>] != target) &#123;</span><br><span class="line">                <span class="comment">//console.log(mid);</span></span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (left &gt; right) &#123;</span><br><span class="line">            <span class="comment">//console.log(&quot;none&quot;)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;none&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="keyword">let</span> target = <span class="number">2</span>;</span><br><span class="line">binarySearch(arr, target)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>博客优化</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>test.md</title>
    <url>/2021/07/test-md/</url>
    <content><![CDATA[<h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3>]]></content>
  </entry>
</search>
